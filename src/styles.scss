
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "sass:map";
@use '@angular/material' as mat;
@use '../src/assets/scss/palette' as customPalette;
@use '../src//assets/scss/custom-style' as my;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

html, body { height: 100%; }

h3 {
  font-family: Jost, sans-serif !important
}

body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// $portfolio-primary: mat.define-palette(mat.$teal-palette);
// $portfolio-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $portfolio-warn: mat.define-palette(mat.$red-palette);

$portfolio-primary: mat.define-palette(customPalette.$bright-navy-blue-palette, 700, 700, 900);
$portfolio-accent: mat.define-palette(customPalette.$blue-grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$portfolio-warn: mat.define-palette(customPalette.$red-palette, 300);

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);


// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$portfolio-theme-light: mat.define-light-theme((
  color: (
    primary: $portfolio-primary,
    accent: $my-accent,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

@debug $portfolio-theme-light;
// Write over background and foreground with my versions.
$portfolio-theme-light: map.set(
  $portfolio-theme-light,
  color,
  background,
  my.$light-background
);

$portfolio-theme-light: map.set(
  $portfolio-theme-light,
  color,
  foreground,
  my.$light-foreground
);

// Change the repeated ones after color just in case
$portfolio-theme-light: map.set(
  $portfolio-theme-light,
  background,
  my.$light-background
);

$portfolio-theme-light: map.set(
  $portfolio-theme-light,
  foreground,
  my.$light-foreground
);

$portfolio-theme-dark: mat.define-dark-theme((
  color: (
    // primary: mat.define-palette(mat.$cyan-palette),
    primary: mat.define-palette(customPalette.$crimson-palette, 500, 50, 300),
    accent: mat.define-palette(customPalette.$gainsboro-palette, 300, 100, 500),
    warn: mat.define-palette(customPalette.$crimson-palette, 700),
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

@debug $portfolio-theme-dark;

// Write over background and foreground with my versions.
$portfolio-theme-dark: map.set(
  $portfolio-theme-dark,
  color,
  background,
  my.$dark-background
);

$portfolio-theme-dark: map.set(
  $portfolio-theme-dark,
  color,
  foreground,
  my.$dark-foreground
);

// Change the repeated ones after color just in case
$portfolio-theme-dark: map.set(
  $portfolio-theme-dark,
  background,
  my.$dark-background
);

$portfolio-theme-dark: map.set(
  $portfolio-theme-dark,
  foreground,
  my.$dark-foreground
);


/* You can add global styles to this file, and also import other style files */

.theme-light {
  @include mat.all-component-themes($portfolio-theme-light);
}

.theme-dark {
  @include mat.all-component-themes($portfolio-theme-dark);
}

.porfolio-spacer {
  flex: 1 1 auto;
}

.header {
  top: 0;
  left: 0;
  right: 0;
  z-index: 2;
  width: 100%;
}

.spacer {
  flex: 1 1 auto;
}

/**
 * App Sidenav styles
 */
::ng-deep .mat-expansion-panel-header {
  padding: 0 16px !important;
}

::ng-deep .mat-nav-list .mat-icon {
  margin-right: 10px;
}

::ng-deep .mat-expansion-panel-body {
  padding: 0 !important
}

::ng-deep .mat-expansion-panel-header {
  height: 48px !important;
}

::ng-deep .mat-expansion-panel .mat-list-item {
  padding-left: 15px !important;
}

::ng-deep .mat-nav-list .is-active {
  background-color: rgb(204, 204, 204) !important;
  border-left: 8px solid rgb(139, 137, 133);
  width: calc(100% - 8px) !important;
  ;
}

::ng-deep .mat-list-base {
  padding-top: 0 !important;
}

::ng-deep .mat-nav-list .mat-list-item.is-active .mat-list-item-content {
  padding: 0 8px;
}

/**
 * App main styles
 */
.sidebar-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

.sidebar-is-mobile .sidebar-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
  width: 100%;
}

.loader-container {
  height: 3px
}

h1.sidebar-app-name {
  margin-left: 8px;
  width: 185px;
}

.sidebar-sidenav-container {
  /** When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
    *causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts.
    */
  flex: 1;
  // background-color: rgb(223, 222, 222) !important;
}

.sidebar-is-mobile .sidebar-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}

.mat-drawer {
  width: 250px !important;
}

.router-container {
  display: flex;
  flex-direction: column;
  padding: 20px;
}

/*
 * General styles
 */

::ng-deep .mat-form-field {
  width: 100%;
}

.container {
  display: flex;
  flex-direction: column;
  padding-left: 15px;
  padding-right: 15px;
  padding-top: 10px;
  padding-bottom: 10px;
  flex-wrap: wrap;
  overflow-x: hidden;
  overflow-y: hidden;
}

.breadcrumb-none {
  padding: 8px 16px;
  display: inline-block;
}

.img-background {
  background-image: url('assets/img/Header-page.png');
  background-size: contain;
  background-position: center;
  object-fit: cover;
  background-repeat: no-repeat;
}

.img-background-2 {
  background-image: url('assets/img/i-5.png');
  background-size: contain;
  background-position: center;
  object-fit: cover;
  background-repeat: no-repeat;
}

.img-background-3 {
  background-image: url('assets/img/i-6.png');
  background-size: contain;
  background-position: center;
  object-fit: cover;
  background-repeat: no-repeat;
}

.box-img {
  display: block;
  width: 100%;
  height: 500px;
}

.header-spacer {
  margin-top: 1rem !important;
  margin-bottom: 1rem !important;
}

//--
.intro-portfolio {
  font-size: 15px;
}

.intro-portfolio-w {
  font-size: 3.5rem;
  font-weight: 700;
  margin-top: 0px;
  margin-bottom: 0px;
  padding-left: 8px;
  padding-right: 8px;
  padding-bottom: 8px;
}

.text-gradient {
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: rgb(0 0 0 / 0%);
  position: relative;
  z-index: 0;
}

.c-1 {
  color: rgb(203 12 159) !important;
}


.text-gradient.c-1 {
  background-image: linear-gradient(310deg, rgb(121 40 202), rgb(255 0 128));
}

.align-selft-center {
  align-self: center;
}

.align-items-center {
  align-items: center;
}
